#!/usr/bin/sh
cd "$(xdistdir)" || exit

while [ $# -gt 0 ]; do
	case "$1" in
		-l) FLAG_l=$1; shift;;
		-m) FLAG_m=$1; shift;;
		-b) FLAG_b=$1; shift;;
		-a) FLAG_a=$1; shift;;
		-u) FLAG_u=$1; shift;;
		-s) FLAG_s=$1; shift;;
		-p) FLAG_p=$1; branch=$2; shift; shift;;
		-r) FLAG_r=$1; shift;;
		-*) echo "[Error] Unkown option $1"
		    exit 1;;
		*) package=$1;
		   version=$2;
		   fake_version="$3";
		   shift $#;;
	esac
done

if [ "$FLAG_u" = -u ]; then
	echo 'Usage: template-updates [-l] [-m] [-b] [-a] [-u] [-p] [-s] [-r] [package|package set] [version] [fake_version]'
	exit
fi

case "$package" in
	kde-framework)
	packages="$(git grep -l -F 'distfiles="${KDE_SITE}/frameworks/' -- 'srcpkgs/*/template' |
		cut -d/ -f2)"
	ci_skip=1
		;;
	plasma)
	packages="$(git grep -l 'distfiles="${KDE_SITE.*}/plasma/' -- 'srcpkgs/*/template' |
		cut -d/ -f2)"
	ci_skip=1
		;;
	kde-apps)
	packages="$(git grep -l 'distfiles="${KDE_SITE.*}/release-service/' -- 'srcpkgs/*/template' |
		cut -d/ -f2)"
	ci_skip=1
		;;
	kmail)
	packages="akonadi-calendar akonadi-contacts akonadi-import-wizard
 akonadi-mime akonadi-notes akonadi-search calendarsupport grantleetheme
 kalarmcal kcalutils kdav kdepim-apps-libs kdepim-runtime kimap kldap
 kmail kmail-account-wizard kmailtransport kmbox kmime kontactinterface ksmtp
 ktnef libgravatar libkdepim libkgapi libkleo libksieve mailcommon mailimporter
 messagelib pimcommon kpimtextedit kidentitymanagement akonadi5 pim-data-exporter"
	ci_skip=1
		;;
	kde-baseapps)
	packages="kde5-baseapps dolphin khelpcenter kate5 konsole baloo-widgets5"
	ci_skip=1
		;;
	okular)
	packages="okular libkexiv25"
		;;
	spectacle)
	packages="spectacle libkipi5"
		;;
	dev)
	packages="$(git diff --name-status FETCH_HEAD...HEAD | grep "^[AM].*srcpkgs/[^/]*/template$" | cut -d/ -f 2)"
		;;
	*) 
	packages="$package"
	dev=1
		;;
esac

if [ "$FLAG_l" = -l ]; then
	echo "$packages" | tr -d '\n'
	exit
fi

amdvlk_update() {
	for i in $(manifest-amdvlk.py "v-$version" | grep -v master); do
		sed -i "s/^${i%=*}=.*/${i%}/g" "srcpkgs/$_pkg/template"
	done
}

gitsub_update() {
	git -C $1 fetch origin
	tag=$(git -C $1 tag | fzf -q $2)
	git checkout $tag
	for i in $(submodules.py --no-urls $1); do
		sed -i "s/^${i%=*}=.*/${i%}/g" "srcpkgs/$_pkg/template"
	done
}

plex_media_player_update() {
	tag=$(curl https://api.github.com/repos/plexinc/plex-media-player/releases/latest 2> /dev/null  | jq -r .name)
	_buildid_version=$(curl https://raw.githubusercontent.com/plexinc/plex-media-player/${tag}/CMakeModules/WebClient.cmake 2> /dev/null| grep -Po 'set\(WEB_CLIENT_BUILD_ID \K[\d-\w]+')
	_clientdesktop_version=$(curl https://artifacts.plex.tv/web-client-pmp/${_buildid_version}/buildid.cmake 2> /dev/null | grep -Po 'set\(DESKTOP_VERSION \K[\.\d\w-]+')
	_clienttv_version=$(curl https://artifacts.plex.tv/web-client-pmp/${_buildid_version}/buildid.cmake 2> /dev/null | grep -Po 'set\(TV_VERSION \K[\.\d\w-]+')
	sed -e "s/^_buildid_version=.*/_buildid_version=${_buildid_version}/g" \
		-e "s/^_clientdesktop_version=.*/_clientdesktop_version=${_clientdesktop_version}/g" \
		-e "s/^_clienttv_version=.*/_clienttv_version=${_clienttv_version}/g" \
		-e "s/^_commit_rev=.*/_commit_rev=${tag#*-}/g" -i "srcpkgs/$_pkg/template"
}

cd "$(xdistdir)" &&
for _pkg in $packages; do
	if [ "$FLAG_p"  = -p ]; then
		commit="$(git log -n 1 --pretty=format:"%H" "$branch" "srcpkgs/$_pkg/template")"
		git cherry-pick $commit
	else
	if [ "$package" = dev ] || [ $dev ]; then
		version=$(./xbps-src update-check "$_pkg")
		version=${version##*${_pkg}-}
		echo "${version}"
	fi
	if grep -q "version=$version" "srcpkgs/$_pkg/template"; then
		echo "$_pkg is aleady $version"
	else
		echo "Update $_pkg to $version"
		if [ "$FLAG_r" = -r ]; then
			echo "Checking homepage of $_pkg"
			xcheckhomepage $_pkg
		fi
		case $_pkg in
			amdvlk) amdvlk_update ;;
			plex-media-player) plex_media_player_update ;;
			rpcs3) gitsub_update ~/Projects/rpcs3;;
			ppsspp) gitsub_update ~/Projects/ppsspp;;
		esac
		sed -e "s/^version=.*/version=${version}/g" \
			-e "s/^revision=.*/revision=1/g" \
			-e 's#http.://download.kde.org/stable#${KDE_SITE}#g' \
			-i "srcpkgs/$_pkg/template"
		if [ "$FLAG_m" = -m ]; then
			sed -i -e 's#Orphaned <orphan@voidlinux.org>#John <johnz@posteo.net>#g' "srcpkgs/$_pkg/template"
		fi
		if [ "$FLAG_b" = -b ]; then
			sed -i -e 's#{KDE_SITE}#{KDE_SITE/stable/unstable}#g' "srcpkgs/$_pkg/template"
		else
			sed -i -e 's#{KDE_SITE/stable/unstable}#{KDE_SITE}#g' "srcpkgs/$_pkg/template"
		fi
		if [ "$FLAG_s" = -s ]; then
			sed -i -e 's#plasma/\${version}#plasma/${version%.*}#g' "srcpkgs/$_pkg/template"
		fi
		xgensum -i "srcpkgs/$_pkg/template"
		if [ "$FLAG_a" = -a ]; then
			git add "srcpkgs/$_pkg/template"
			[ $(git diff --cached --numstat "srcpkgs/$_pkg/template" | wc -l) -eq 1 ] || (echo No changes staged. ; exit 1)
			COMMIT=$(git log -n 1 --pretty=format:"%H" "srcpkgs/$_pkg/template")
			git commit --fixup="$COMMIT"
		else
			xbump "$_pkg"
			if [ "$ci_skip" ]; then
				git commit --amend -m "${_pkg}: update to ${fake_version:=${version}}" -m "[ci skip]"
			fi
		fi
	fi
	fi
done
