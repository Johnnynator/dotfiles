#!/usr/bin/env sh

# shellcheck disable=SC2039

get_host_gpu_deps() {
	GPU_LIBS="mesa-intel-dri mesa-ati-dri mesa-nouveau-dri mesa-nouveau-dri
		mesa-tegra-dri mesa-vc4-dri mesa-vmwgfx-dri nvidia-gtklibs
		nvidia-libs nvidia390-gtklibs nvidia390-libs nvidia340-libs"

	for lib in $GPU_LIBS; do
		dep=$(xbps-query -p pkgver $lib)
		if [ $? -eq 0 ]; then
			GPU_DEPS="$GPU_DEPS $(xbps-uhelper getpkgname $dep)"
		fi
	done
}

add_local_repos() {
	local XDISTDIR
	XDISTDIR="$(xdistdir)"
	if [ $? -eq 0 ]; then
		cd "$(xdistdir)" &&
		local BRANCH=$(git symbolic-ref -q --short HEAD 2>/dev/null)
		REPOS="--repository=$XDISTDIR/hostdir/binpkgs $REPOS"
		REPOS="--repository=$XDISTDIR/hostdir/binpkgs/nonfree $REPOS"
		REPOS="--repository=$XDISTDIR/hostdir/binpkgs/debug $REPOS"
		REPOS="--repository=$XDISTDIR/hostdir/binpkgs/multilib $REPOS"
		REPOS="--repository=$XDISTDIR/hostdir/binpkgs/multilib/nonfree $REPOS"
		if [ "$BRANCH" != "master" ]; then
			REPOS="--repository=$XDISTDIR/hostdir/binpkgs/$BRANCH $REPOS"
			REPOS="--repository=$XDISTDIR/hostdir/binpkgs/$BRANCH/nonfree $REPOS"
			REPOS="--repository=$XDISTDIR/hostdir/binpkgs/$BRANCH/debug $REPOS"
			REPOS="--repository=$XDISTDIR/hostdir/binpkgs/$BRANCH/multilib $REPOS"
			REPOS="--repository=$XDISTDIR/hostdir/binpkgs/$BRANCH/multilib/nonfree $REPOS"
		fi
	fi
}

if [ $# -lt 1 ]; then
	echo "Usage: $0 [opts] <app> <cmd> [cmdargs]" >&2
	exit 1
fi


DEPS=""
if [ "$1" = -c ]; then
	FLAG_c="$1"
	shift
fi

if [ "$1" = -x ]; then
	FLAG_x="$1"
	shift
fi

if [ "$1" = -l ]; then
	FLAG_l="$1"
	shift
fi

APP="$1"
CMD="$2"
if [ -z "$CMD" ]; then
	CMD="$APP"
	shift 1
else
	shift 2
fi
CMDARGS="$*"

: ${ARCH:=$(xbps-uhelper arch)}
: ${UID=$(id -u)}

case "$ARCH" in
i686|x86_64)
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current"
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/nonfree"
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/multilib"
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/multilib/nonfree"
	;;
aarch64*)
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/aarch64"
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/aarch64/nonfree"
	;;
*-musl)
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/musl"
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/musl/nonfree"
	;;
*)
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current"
	REPOS="$REPOS --repository=https://alpha.de.repo.voidlinux.org/current/nonfree"
	;;
esac

if [ "$FLAG_l" = -l ]; then
	add_local_repos
fi

if ping -c 1 -W 1 1.1.1.1 >/dev/null 2>&1; then
	APPVER=$(XBPS_TARGET_ARCH=$ARCH xbps-query ${REPOS} -Mi -p pkgver $APP 2>/dev/null)
else
	for i in $HOME/xbps-sandbox/${APP}*-${ARCH}*; do
		APPVER="$(basename ${i%-${ARCH}})"
	done
fi

if [ -z "$APPVER" ]; then
	echo "$0: cannot find $APP package!" >&2
	exit 1
fi

CACHEDIR=$HOME/xbps-sandbox/cachedir-${ARCH}
SBOXDIR=$HOME/xbps-sandbox/${APPVER}-${ARCH}

if [ ! -d $SBOXDIR ]; then
	get_host_gpu_deps
	mkdir -p $CACHEDIR
	echo "Installing $APPVER application, please wait..."
	XBPS_TARGET_ARCH=$ARCH xbps-install -S \
		--cachedir $CACHEDIR ${REPOS} \
		-r $SBOXDIR -Miy \
		base-files busybox-static $GPU_DEPS xbps $DEPS \
		$APP || exit 1
	mkdir -p -m1777 $SBOXDIR/dev/shm
	mkdir -p -m700 $SBOXDIR/run/user/$UID
	mkdir -p -m755 $SBOXDIR/var/lib/dbus

	mkdir -p -m755 $SBOXDIR/$HOME
	mkdir -p $SBOXDIR/usr/share/fonts

	if [ -f $HOME/.Xauthority ]; then
		cp -f $HOME/.Xauthority $SBOXDIR/$HOME
	fi
	for f in services localtime os-release resolv.conf; do
		cp -fL /etc/$f $SBOXDIR/etc || true
	done

	if [ -e $SBOXDIR/usr/bin/busybox.static ]; then
		for f in $($SBOXDIR/usr/bin/busybox.static --list); do
			ln -s busybox.static ${SBOXDIR}/usr/bin/${f} 2>/dev/null
		done
	fi

	echo $USER:x:$UID:$(id -g)::$HOME:/bin/sh >> $SBOXDIR/etc/passwd
	echo $(id -gn):x:$(id -g): >> $SBOXDIR/etc/group
	ln -s /var/lib/dbus/machine-id $SBOXDIR/etc/
	cp -f /var/lib/dbus/machine-id $SBOXDIR/var/lib/dbus
	ln -s usr/lib $SBOXDIR/lib
	XBPS_ARCH=$ARCH xbps-reconfigure -r $SBOXDIR -f base-files
	xbps-uunshare $SBOXDIR -- /bin/xbps-reconfigure -fa
fi

if [ "$FLAG_c" = -c ]; then
	xbps-uunshare \
		-b /usr/share/fonts:/usr/share/fonts \
		-b /dev:/dev -b /dev/shm:/dev/shm \
		-b /tmp:/tmp -b /home/$USER:/home/$USER \
		-b /run:/run -b /run/user/$UID:/run/user/$UID \
		$SBOXDIR -- $CMD $CMDARGS
elif [ "$FLAG_x" = -x ]; then
	XBPS_TARGET_ARCH=$ARCH xbps-install -S \
		--cachedir $CACHEDIR ${REPOS} \
		-r $SBOXDIR -Miy \
		$CMD $CMDARGS
else
	nohup xbps-uunshare \
		-b /usr/share/fonts:/usr/share/fonts \
		-b /dev:/dev -b /dev/shm:/dev/shm \
		-b /tmp:/tmp -b /home/$USER:/home/$USER \
		-b /run:/run -b /run/user/$UID:/run/user/$UID \
		$SBOXDIR -- $CMD $CMDARGS > $SBOXDIR/var/log/xbps-launch.log 2>&1 >/dev/null &
fi
